# 에라토스테네스의 체
# --> 여러 개의 수가 소수인지 아닌지를 판별할 때 사용하는 대표적인 알고리즘
import math

n = 1000 # 2부터 1000까지의 모든 수에 대해 소수 판별
array = [True for i in range(n+1)] # 처음엔 모든 수가 소수(True)인 것으로 초기화 (0과 1 제외)

# 에라토스테네스의 체 알고리즘
# 2부터 n의 제곱근까지의 모든 수 확인
# -> n까지 확인할 필요 X / 가운데 약수 기준으로 대칭이거든..
for i in range(2, int(math.sqrt(n)) + 1):
    if array[i] == True: # i가 소수인 경우(남은 수인 경우)
        # i를 제외한 i의 모든 배수 지우기
        j = 2
        while i * j <= n: # n이 될 때까지
            array[i*j] = False
            j += 1

# 모든 소수 출력 (-> 위에서 소수 아닌 것들은 다 False 처리 되었을 것이다)
for i in range(2, n+1):
    if array[i]: # array[i]가 True인 경우에만
        print(i, end=' ')

'''
    "에라토스테네스의 체" 알고리즘의 시간 복잡도는 O(NloglogN)
        -> 사실상 선형 시간에 가까울 정도로 매우 빠르다
        -> 하지만, 메모리가 많이 필요하다는 단점이 있다 (리스트 할당해야 되서..)
        -> 이 알고리즘을 이용해야 하는 문제에서는.. 보통 N이 100만 이내로 주어지는 경우가 많음
    ex) N = 100만, O(NloglogN) => 약 O(100만*4)
'''
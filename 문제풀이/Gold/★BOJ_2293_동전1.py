# 동전 1
# 동전들이 어떤 게 들어올 지도 모르고.. 서로 배수 관계도 아님 -> 트리 만들면 경우의 수가 겁나 복잡함
# 어떻게 풀까..? -> 완탐 못하겠으면.. 근데 0.5초 걸려있으면.. 이건 DP 레츠고 해야지

n, k = map(int, input().split())
coins = []
for _ in range(n): # 동전 종류 입력 받기
  coins.append(int(input()))

memo = [0] * (k+1)
memo[0] = 1

for c in coins: # 동전 순회
  for i in range(c, k+1):
    memo[i] = memo[i] + memo[i-c] # 이렇게 하면.. coins 각 경우에 따라 따로 따로 셀 수 있다

print(memo[k]) # 가치의 합이 k원이 되도록 만드는 경우의 수 출력

# ======== 오답 노트 =========
# 접근이 아예 틀린 건 아닌데.. DP로 풀어야 겠다는 것도 알았는데, 왜 캐치를 못했느냐..!
# 따로 세야 하는 방법을 몰랐다 (무조건 한 번에 세려 하다가... 규칙성을 못 찾은 게 문제)
# DP에서는 결국 점화식만 세우면 끝나는 건데.. 이걸 왜 못하냐.. ㅜㅜ
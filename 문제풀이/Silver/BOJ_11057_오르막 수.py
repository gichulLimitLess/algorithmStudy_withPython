# 오르막 수
# dp[i][j] -> i번째 자리의 수가 최대 j일 때의 오름차순 수 개수
n = int(input())

dp = [[0 for _ in range(10)] for _ in range(n+1)] # dp 테이블 생성
for j in range(10): # 초기값 생성 (수의 길이가 1일 때에 대해서...)
    dp[1][j] = j+1

for i in range(1, n+1): # 초기값 생성 두번째 (맨 뒤의 수가 최대 0일 경우는, 무조건 경우가 1가지다)
    dp[i][0] = 1

for i in range(2, n+1): # 수의 길이가 2인 경우에 대해서.. 계속 채워 나가기
    for j in range(1, 10):
        # dp[i][j]의 값은..
        # i-1번째 자리의 수가 최대 j일 때의 오르막 수에다가, i번째 자리의 수가 최대 j-1일 때의 오르막 수를 더하면 된다
        dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % 10007

print(dp[n][9]) # 길이가 n일 때의 오르막 수를 구한다
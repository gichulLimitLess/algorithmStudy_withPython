# 실전 문제 1 - 1로 만들기
# 1 <= X <= 30,000

X = int(input())
# 모든 경우의 수에 대해서, 완전 탐색을 해봐야 한다
# 근데.. 그걸 모든 X에 대해서 다 해보겠다고? 미친 짓이다
# 이 때 나오는 친구, DP
# 각각에서의 1로 만드는 최소 갯수를 재활용, 더 큰 문제에 쓴다는 마인드로다가
memo = [0] * (X+1)

# DP 진행 (Bottom-Up)
for i in range(2, X+1):
  # 현재의 수에서 1을 빼는 경우
  memo[i] = memo[i-1] + 1

  # 현재의 수가 2로 나누어 떨어지는 경우
  if i % 2 == 0:
    memo[i] = min(memo[i], memo[i // 2] + 1)

  # 현재의 수가 3으로 나누어 떨어지는 경우
  if i % 3 == 0:
    memo[i] = min(memo[i], memo[i // 3] + 1)

  # 현재의 수가 5로 나누어 떨어지는 경우
  if i % 5 == 0:
    memo[i] = min(memo[i], memo[i // 5] + 1)

print(memo[X])

# ====== 오답 노트 =======
# 기존에는.. 나누어 떨어지는 부분에 대해서 잘못된 방식으로 min을 갱신했기에.. 잘못된 답이 나오게 풀이했던 적이 있음
# 위와 같이, 4가지 연산에 대해서 모두 수행해서, 뭐가 제일 작은지 하나씩 톺아보는 식으로 풀어야 한다
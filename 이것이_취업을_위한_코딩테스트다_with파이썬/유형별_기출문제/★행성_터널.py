# 행성 터널
'''
    [오답노트]
    - 난 이번에.. 크루스칼 알고리즘은 잘 써야 한다는 것도 알았고..
    -> 그래서, edge 비용을 이용해서 오름차순 정렬 후, 풀어야 한다는 것도 알고 있었는데..
    -> 문제의 특성에 따라 "간선이 너무 많은데.. 어떻게 축소하지?" 라는 질문에서 막힌 것 같다.
    -> 여기서는.. dx, dy, dz 중 그냥 min 한 거 하나씩 고르는데..
        이거 축별로 그냥 정렬 후 구하면 된다는 아이디어를 구체화하지 못함
    -> MST + 좌표 기반 특수 비용.. 이런 패턴이 나오면 "축별 정렬 인접쌍"만으로 간선 후보를 축소해 보자
    -> 이번의 내 가장 큰 패착은 크루스칼 자체가 아니라, 간선 후보 축소 실패, 즉 간선 생성 전략의 전환 실패다!

    [요약]
    “MST 문제인데 좌표가 주어졌고, 비용이 |x₁-x₂|, |y₁-y₂|, |z₁-z₂| 같은 형태라면 — 정렬 인접쌍 트릭부터 의심하라.”
    “각 축에서의 인접 관계만 봐도 그 축 기준 최소 비용 후보는 모두 포함되므로, 전체 MST에서 빠질 간선이 없다.”

    [느낌]
    - MST 문제인데 입력이 좌표로 주어짐.
    - 간선이 너무 많다 → 완전그래프 불가 → 구조적으로 줄일 방법을 찾자.
    - “거리 정의식”이 단순한 수학식(절댓값, min/max 등)이라면 → 정렬 기반 접근 가능성 높음.

    [원리]
    - 각 축별 정렬 후 인접한 쌍만으로도 MST의 최소 비용 간선 후보를 모두 포괄한다.
    - 결국 MST의 핵심은 "간선 생성" 전략이며, 크루스칼/프림은 그다음이다.

    [키워드 감각]
    → “간선 많음 = 축소 필요”
    → “좌표 입력 = 정렬 가능성 탐색”
    → “비용식이 min/abs 구조 = 인접쌍 트릭 가능성”
'''